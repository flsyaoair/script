<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<import resource="spring-data-runtime.xml" />

	<context:component-scan base-package="com.csst.pp" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	
	<mvc:interceptors>  
        <!-- 多个拦截器,顺序执行 -->  
        <mvc:interceptor>  
           <mvc:mapping path="/**/secure/**" /><!-- 如果不配置,将拦截所有的Controller -->  
           <bean class="com.csst.pp.interceptor.AuthenticationInterceptor"></bean>  
        </mvc:interceptor>  
    </mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving  up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/html/**" location="/html/" />

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>

	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:configs/messages</value>
				<value>classpath:configs/message/orgmessage</value>
				<value>classpath:configs/message/rolemessage</value>
				<value>classpath:configs/message/dictmessage</value>
			</list>
		</property>
	</bean>

	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	<bean id="jsonView" class="com.csst.view.JSONView" />

	<bean id="xmlView" class="com.csst.view.XmlView" />

	<!-- 自定义资源视图 -->
	<bean name="resourceView" class="com.csst.view.ResourceView">
		<property name="prefix" value="/WEB-INF/views/resource/" />
		<property name="suffix" value=".jsp" />
		<property name="errorPage" value="/WEB-INF/views/error404.jsp" />
		<property name="mappings">
			<props>
				<prop key="video_list">video_list</prop>
				<prop key="video_edit">video_edit</prop>
				<prop key="video_dimension">video_dimension</prop>
				<prop key="video_dimension_frame">video_dimension_frame</prop>
				<prop key="audio_list">audio_list</prop>
				<prop key="audio_edit">audio_edit</prop>
				<prop key="audio_add">audio_add</prop>
				<prop key="audio_dimension">audio_dimension</prop>
				<prop key="photo_list">photo_list</prop>
				<prop key="photo_edit">photo_edit</prop>
				<prop key="photo_add">photo_add</prop>
				<prop key="photo_dimension">photo_dimension</prop>
				<prop key="photo_dimensionDetail">photo_dimensionDetail</prop>
				<prop key="sample_list">sample_list</prop>
				<prop key="upload_result">upload_result</prop>
				<prop key="audio_dimensionDetail">audio_dimensionDetail</prop>
			</props>
		</property>
	</bean>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="JSONInterceptor" class="com.csst.view.JSONInterceptor">
	</bean>

	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>JSONInterceptor</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>*Controller</value>
				<value>REST*</value>
			</list>
		</property>
	</bean>

	<aop:aspectj-autoproxy />
	<bean id="entityToSearchServer" class="com.csst.pp.aop.SaveOrUpdateInterceptor"></bean>
	<bean id="deleteInterceptor" class="com.csst.pp.aop.DeleteInterceptor"></bean>

	<bean id="solrServer" class="com.csst.pp.search.solr.SolrServerFactoryBean">
		<property name="url" value=" <%= urlvalue %> "/>
	</bean>

	<bean id="messageUtil" class="com.csst.tool.MessageUtil">
		<property name="messageSource" ref="messageSource" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>10444800</value>
		</property>
	</bean>
	
	<!-- Property File-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:configs/task.properties</value>
			</list>
		</property>
	</bean>

	<!-- task -->
	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	
	<!--
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="nvmpSyncJob" />
		<property name="targetMethod" value="nvmpSync" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetail" />
		<property name="cronExpression" value="${nvmp.sync.con}" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	<property name="triggers">
		<list>
			<ref bean="cronTrigger" />
		</list>
	</property>
	</bean>
	-->
	
</beans>
